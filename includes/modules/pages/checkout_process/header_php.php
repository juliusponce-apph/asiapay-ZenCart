<?php
/**
***author: Gayward S. Mendoza, E.c.E.
***mentor: Henry Kwan
***file:pesopay.php
***date: May 19, 2009
***revision date: June 18, 2009
***location: includes\modules\pages\checkout_process\header_php.php

 * Checkout Process Page 
 * 
 * @package page
 * @copyright Copyright 2003-2006 Zen Cart Development Team
 * @copyright Portions Copyright 2003 osCommerce
 * @license http://www.zen-cart.com/license/2_0.txt GNU Public License V2.0
 * @version $Id: header_php.php 4276 2006-08-26 03:18:28Z drbyte $
 */ 
// This should be first line of the script:
  $zco_notifier->notify('NOTIFY_HEADER_START_CHECKOUT_PROCESS');

  require(DIR_WS_MODULES . zen_get_module_directory('checkout_process.php'));

// load the after_process function from the payment modules
  $payment_modules->after_process();

  $_SESSION['cart']->reset(true);

// unregister session variables used during checkout
  unset($_SESSION['sendto']);
  unset($_SESSION['billto']);
  unset($_SESSION['shipping']);
  unset($_SESSION['payment']);
  unset($_SESSION['comments']);
  $order_total_modules->clear_posts();//ICW ADDED FOR CREDIT CLASS SYSTEM

  // This should be before the zen_redirect:
  $zco_notifier->notify('NOTIFY_HEADER_END_CHECKOUT_PROCESS');
  
  
 //start of: Checkout Success by gayward
 $asiapay = $_POST['asiapay'];
if ($asiapay=="true"){
 
 if (!$_SESSION['customer_id']) {
  zen_redirect(zen_href_link(FILENAME_TIME_OUT));
}

$notify_string='';
if (isset($_GET['action']) && ($_GET['action'] == 'update')) {
  $notify_string = 'action=notify&';
  $notify = $_POST['notify'];

  if (is_array($notify)) {
    for ($i=0, $n=sizeof($notify); $i<$n; $i++) {
      $notify_string .= 'notify[]=' . $notify[$i] . '&';
    }
    if (strlen($notify_string) > 0) $notify_string = substr($notify_string, 0, -1);
  }
  if ($notify_string == 'action=notify&') {
      zen_redirect(zen_href_link(FILENAME_CHECKOUT_SUCCESS, '', 'SSL'));
  } else {
    zen_redirect(zen_href_link(FILENAME_DEFAULT, $notify_string));
  }
}



require(DIR_WS_MODULES . zen_get_module_directory('require_languages.php'));
$breadcrumb->add(NAVBAR_TITLE_1);
$breadcrumb->add(NAVBAR_TITLE_2);

// find out the last order number generated for this customer account
$orders_query = "SELECT * FROM " . TABLE_ORDERS . "
                 WHERE customers_id = :customersID
                 ORDER BY date_purchased DESC LIMIT 1";
$orders_query = $db->bindVars($orders_query, ':customersID', $_SESSION['customer_id'], 'integer');
$orders = $db->Execute($orders_query);
$orders_id = $orders->fields['orders_id'];

// use order-id generated by the actual order process
// this uses the SESSION orders_id, or if doesn't exist, grabs most recent order # for this cust (needed for paypal et al).
// Needs reworking in v1.4 for checkout-rewrite
$zv_orders_id = (isset($_SESSION['order_number_created']) && $_SESSION['order_number_created'] >= 1) ? $_SESSION['order_number_created'] : $orders_id;
$orders_id = $zv_orders_id;
$order_summary = $_SESSION['order_summary'];
unset($_SESSION['order_summary']);
unset($_SESSION['order_number_created']);

// prepare list of product-notifications for this customer
$global_query = "SELECT global_product_notifications
                 FROM " . TABLE_CUSTOMERS_INFO . "
                 WHERE customers_info_id = :customersID";

$global_query = $db->bindVars($global_query, ':customersID', $_SESSION['customer_id'], 'integer');
$global = $db->Execute($global_query);
$flag_global_notifications = $global->fields['global_product_notifications'];

if ($flag_global_notifications != '1') {

  $products_array = array();
  $counter = 0;

  $products_query = "SELECT products_id, products_name
                     FROM " . TABLE_ORDERS_PRODUCTS . "
                     WHERE orders_id = :ordersID
                     ORDER BY products_name";

  $products_query = $db->bindVars($products_query, ':ordersID', $orders_id, 'integer');
  $products = $db->Execute($products_query);

  while (!$products->EOF) {
    $notificationsArray[] = array('counter'=>$counter,
                                  'products_id'=>$products->fields['products_id'],
                                  'products_name'=>$products->fields['products_name']);
    $counter++;
    $products->MoveNext();
  }
}

  $flag_show_products_notification = (CUSTOMERS_PRODUCTS_NOTIFICATION_STATUS == '1' and sizeof($notificationsArray)>0 and $flag_global_notifications != '1') ? true : false ;

  $products_displayed = array();


  $gv_query = "SELECT amount
               FROM " . TABLE_COUPON_GV_CUSTOMER . "
               WHERE customer_id = :customersID ";

  $gv_query = $db->bindVars($gv_query, ':customersID', $_SESSION['customer_id'], 'integer');
  $gv_result = $db->Execute($gv_query);

  if ($gv_result->fields['amount'] > 0 ) {
    $customer_has_gv_balance = true;
    $customer_gv_balance = $currencies->format($gv_result->fields['amount']);
  }
//eof: Checkout Success by gayward

// start: original code from gayward 
$query = "SELECT * FROM ". TABLE_ORDERS . " ORDER BY date_purchased DESC LIMIT 1";

  $result = $db->Execute($query);
  $orders_id = $result->fields['orders_id'];
  
//$result = mysql_query($query) or die("could not execute query");
	//while($row = mysql_fetch_array($result))
		//{	
		//	$orderId = $row['orders_id'];
		//}
		
		
$integrationType = $_POST['integrationType'];
if ($integrationType=="clientPost"){

$form_action_url = $_POST['actionUrl'];
$orderRef = $_POST['orderRefPrefix'] . "-" . sprintf("%08d",$orders_id);
$currCode = $_POST['currCode'];
$amount = $_POST['amount'];
$payType = $_POST['payType'];
$lang = $_POST['lang'];
$merchantId = $_POST['merchantId'];
$successUrl = $_POST['successUrl'];
$failUrl = $_POST['failUrl'];
$cancelUrl = $_POST['cancelUrl'];


$payType = $_POST['payType'];	
$secureHashSecret = $_POST['secureHashSecret'];
if ($secureHashSecret) {
  require_once ('SHAPaydollarSecure.php');
  $paydollarSecure = new SHAPaydollarSecure ();
  $secureHash = $paydollarSecure->generatePaymentSecureHash ( $merchantId, $orderRef, $currCode, $amount, $payType, $secureHashSecret );
  $_POST['secureHash'] = $secureHash;
} else {
  $_POST['secureHash'] = '';
}


$data3ds2['threeDSTransType'] = $_POST['threeDSTransType'];
$data3ds2['threeDSChallengePreference'] = $_POST['threeDSChallengePreference'];

$account_info_query = "SELECT * FROM " . TABLE_CUSTOMERS_INFO . "
               WHERE customers_info_id = :customersID";
               
$account_info_query = $db->bindVars($account_info_query, ':customersID', $_SESSION['customer_id'], 'integer');
$acct_info = $db->Execute($account_info_query);
  // echo "<pre>";
  // print_r($acct_info);

include_once('PaydollarThreeDs.php');
// echo "<pre>";
// print_r($orders);

$data3ds2 = array_merge($data3ds2,$arrThreeDSData);

$threeDSParam = http_build_query($data3ds2);
// echo $threeDSParam;exit;
header ('Location: '.$form_action_url.'?orderRef='.$orderRef.'&currCode='.$currCode.'&amount='.$amount.'&paymentMethod=CC&payType='.$payType.'&lang='.$lang.'&merchantId='.$merchantId.'&successUrl='.$successUrl.'&failUrl='.$failUrl.'&cancelUrl='.$cancelUrl.'&payType='.$payType.'&secureHash='.$secureHash."&".$threeDSParam);


}else if($integrationType=="directClient"){
$form_action_url = $_POST['actionUrl'];
$orderRef = $_POST['orderRefPrefix'] . "-" . sprintf("%08d",$orders_id);
$currCode = $_POST['currCode'];
$amount = $_POST['amount'];
$payType = $_POST['payType'];
$lang = $_POST['lang'];
$merchantId = $_POST['merchantId'];
$successUrl = $_POST['successUrl'];
$failUrl = $_POST['failUrl'];
$cancelUrl = $_POST['cancelUrl'];
//added for direct client side integration
$pMethod = $_POST['pMethod'];
$epMonth = $_POST['epMonth'];
$epYear = $_POST['epYear'];
$cardNo = $_POST['cardNo'];
$securityCode = $_POST['securityCode'];
$cardHolder = $_POST['cardHolder'];

//$clientPost = $_POST['clientPost'];


header("Location: ".$form_action_url.'?orderRef='.$orderRef.'&currCode='.$currCode.'&amount='.$amount.'&paymentMethod=CC&payType='.$payType.'&lang='.$lang.'&merchantId='.$merchantId.'&successUrl='.$successUrl.'&failUrl='.$failUrl.'&cancelUrl='.$cancelUrl.'&pMethod='.$pMethod.'&epMonth='.$epMonth.'&epYear='.$epYear.'&cardNo='.$cardNo.'&securityCode='.$securityCode.'&cardHolder='.$cardHolder);

// eof: original code from gayward
 
 }else{
	zen_redirect(zen_href_link(FILENAME_CHECKOUT_SUCCESS, '', 'SSL'));	//ORIG line of zen cart
 }
}else{
 zen_redirect(zen_href_link(FILENAME_CHECKOUT_SUCCESS, '', 'SSL'));	//ORIG line of zen cart
 }


	
  require(DIR_WS_INCLUDES . 'application_bottom.php');
?>

